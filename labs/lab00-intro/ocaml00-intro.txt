─( 11:30:40 )─< command 0 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # "Hello World";;
- : string = "Hello World"
─( 11:30:40 )─< command 1 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # "Hello" ^ " " ^ "World";;
- : string = "Hello World"
─( 11:35:27 )─< command 2 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 
┌───┬─────┬───────────┬──────────────┬──────┬────────┬────┬──────┬─────┬───────────┬────────┬──────────────────┬─────────────────────( 11:38:31 )─< command 2 >──────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 
┌───┬─────┬───────────┬──────────────┬──────┬────────┬────┬──────┬─────┬───────────┬────────┬──────────────────┬─────────────────( 11:38:31 )─< command 2 >──────────────────────{ counter: 0 }─
utop # 
─( 11:38:31 )─< command 2 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let x = 7;;
val x : int = 7
─( 11:46:22 )─< command 3 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x + 3;;
- : int = 10
─( 11:46:22 )─< command 4 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x = 13;;
- : bool = false
─( 11:50:14 )─< command 5 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let x = 13;;
val x : int = 13
─( 11:51:49 )─< command 6 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x
;;
- : int = 13
─( 11:52:40 )─< command 7 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 2.5 + 1.1;;
Error: This expression has type float but an expression was expected of type
         int
─( 11:54:13 )─< command 8 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 
┌───┬─────┬───────────┬──────────────┬──────┬────────┬────┬──────┬─────┬───────────┬────────┬──────────────────┬─────────────────( 11─( 11:55:11 )─< 
─( 11:55:11 )─< command 8 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 2.5 +. 1.1;;
- : float = 3.6
─( 11:55:11 )─< command 9 >───────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x + 2.5;;
Error: This expression has type float but an expression was expected of type
         int
─( 11:57:04 )─< command 10 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x +. 2.5;;
Error: This expression has type int but an expression was expected of type
         float
─( 11:58:14 )─< command 11 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let f = function x -> x *. x +. 1.0;;
val f : float -> float = <fun>
─( 11:58:21 )─< command 12 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # f 10;;
Error: This expression has type int but an expression was expected of type
         float
  Hint: Did you mean `10.'?
─( 12:13:24 )─< command 13 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # f 10.;;
- : float = 101.
─( 12:14:28 )─< command 14 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let g = function pair -> let x = fst pair and y = snd pair in x *. x +. y *. y;;
val g : float * float -> float = <fun>
─( 12:14:28 )─< command 15 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # g (1.0, 1.0);;
- : float = 2.
─( 12:23:23 )─< command 16 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let h = function (x, y) -> x *. x +. y *. y;;
val h : float * float -> float = <fun>
─( 12:23:40 )─< command 17 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # h 1.;;
Error: This expression has type float but an expression was expected of type
         float * float
─( 12:27:21 )─< command 18 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # h (1.0, 1.0);;
- : float = 2.
─( 12:27:26 )─< command 19 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let rec fact = function n -> if n <= then 1 else fact (n - 1) * n;;
Error: Syntax error
─( 12:27:40 )─< command 20 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let rec fact = function n -> if n <= then 1 else fact (n - 1) * n;;
Error: Syntax error
─( 12:46:18 )─< command 21 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let rec fact = function n -> if n <= 1 then 1 else fact (n - 1) * n;;
val fact : int -> int = <fun>
─( 12:46:18 )─< command 22 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fact 6;;
- : int = 720
─( 12:47:57 )─< command 23 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let fff = function x -> x;;
val fff : 'a -> 'a = <fun>
─( 12:48:02 )─< command 24 >──────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─

